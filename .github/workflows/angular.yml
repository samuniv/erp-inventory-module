name: Angular CI

on:
  push:
    branches: [main, develop]
    paths:
      - "erp-inventory-angular/**"
      - ".github/workflows/angular.yml"
  pull_request:
    branches: [main, develop]
    paths:
      - "erp-inventory-angular/**"
      - ".github/workflows/angular.yml"

jobs:
  lint-and-test:
    name: Lint, Test, and Build Angular App
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./erp-inventory-angular

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: "./erp-inventory-angular/package-lock.json"

      - name: Install dependencies
        run: npm ci

      - name: Cache Angular CLI
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-${{ hashFiles('./erp-inventory-angular/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-
            ${{ runner.os }}-node-

      - name: Lint code
        run: npm run lint

      - name: Run unit tests with coverage
        run: npm run test:ci
        env:
          CHROME_BIN: /usr/bin/google-chrome

      - name: Upload test coverage
        uses: codecov/codecov-action@v4
        if: matrix.node-version == '20.x'
        with:
          file: ./erp-inventory-angular/coverage/lcov.info
          flags: frontend
          name: angular-coverage
          fail_ci_if_error: false

      - name: Build production
        run: npm run build:prod

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        if: matrix.node-version == '20.x' && github.ref == 'refs/heads/main'
        with:
          name: angular-dist
          path: ./erp-inventory-angular/dist/
          retention-days: 7

  e2e-tests:
    name: End-to-End Tests
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    needs: lint-and-test
    defaults:
      run:
        working-directory: ./erp-inventory-angular

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"
          cache-dependency-path: "./erp-inventory-angular/package-lock.json"

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright
        run: npx playwright install chromium

      - name: Run E2E tests
        run: npm run e2e
        env:
          CI: true

      - name: Upload E2E test results
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: e2e-test-results
          path: ./erp-inventory-angular/e2e-results/
          retention-days: 3

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./erp-inventory-angular

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"

      - name: Run security audit
        run: npm audit --audit-level=high

      - name: Check for vulnerabilities with better-npm-audit
        run: |
          npx better-npm-audit audit --level high
        continue-on-error: true

  build-docker:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: [lint-and-test]
    if: github.ref == 'refs/heads/main'
    defaults:
      run:
        working-directory: ./erp-inventory-angular

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/angular-frontend
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./erp-inventory-angular
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
