version: "3.8"

services:
  # PostgreSQL Database for testing
  postgres-test:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: erp_test
      POSTGRES_USER: test_user
      POSTGRES_PASSWORD: test_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test_user -d erp_test"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Oracle Database for testing
  oracle-test:
    image: container-registry.oracle.com/database/express:21.3.0-xe
    environment:
      ORACLE_PWD: TestPassword123
      ORACLE_CHARACTERSET: AL32UTF8
    ports:
      - "1521:1521"
      - "5500:5500"
    volumes:
      - oracle_test_data:/opt/oracle/oradata
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "sqlplus -L system/TestPassword123@localhost:1521/XE @/dev/null",
        ]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 120s

  # Kafka for messaging tests
  zookeeper-test:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka-test:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper-test
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-test:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
    ports:
      - "9092:9092"
    healthcheck:
      test:
        ["CMD-SHELL", "kafka-topics --bootstrap-server localhost:9092 --list"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis for caching tests
  redis-test:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_test_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Test runner service
  integration-test-runner:
    build:
      context: .
      dockerfile: Dockerfile.test
    depends_on:
      postgres-test:
        condition: service_healthy
      kafka-test:
        condition: service_healthy
      redis-test:
        condition: service_healthy
    environment:
      - ASPNETCORE_ENVIRONMENT=IntegrationTest
      - ConnectionStrings__PostgreSQL=Host=postgres-test;Database=erp_test;Username=test_user;Password=test_password
      - ConnectionStrings__Oracle=Data Source=oracle-test:1521/XE;User Id=system;Password=TestPassword123;
      - Kafka__BootstrapServers=kafka-test:9092
      - Redis__ConnectionString=redis-test:6379
      - TESTCONTAINERS_HOST_OVERRIDE=host.docker.internal
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./TestResults:/app/TestResults
    profiles:
      - integration-tests

volumes:
  postgres_test_data:
  oracle_test_data:
  redis_test_data:

networks:
  default:
    name: erp-integration-test-network
